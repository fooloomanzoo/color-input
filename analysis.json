{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<color-badge>` is a badge that displays a color as a rectangle with a specified height and width.\nThe transparency of the color will be displayed. It can slot elements and they are automatically centered. Because of using a canvas to draw the color, it needs to be explicitly sized via the width- and height-attribute.\nClick on the badge to generate a random color.\n\n  ```html\n    <color-badge height=\"24\" width=\"96\" value=\"[[color]]\">\n      <span>[[color]]</span>\n    </color-badge>\n  ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--transparency-pattern` | background pattern for the transparency layer | linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)), linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)))\n`--transparency-pattern-size` | size transparency pattern | 0.75em\n`--color-badge-radius` | border-radius of the badge | 6px\n`--color-badge-shadow` | box-shadow of the badge | 0 1px 4px 1px rgba(0,0,0,.1)\n`--color-badge-height` | height of the badge | 32px\n`--color-badge-width` | width of the badge | 60px\n`--color-badge-text-overflow` | text-overflow of the slotted content of the badge | ellipsis\n`--color-badge-padding` | padding of the slotted content of the badge | 4px",
      "summary": "",
      "path": "color-badge.js",
      "properties": [
        {
          "name": "hideTransparencyPattern",
          "type": "boolean | null | undefined",
          "description": "hide the transparency pattern",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "noRandomColorOnClick",
          "type": "boolean | null | undefined",
          "description": "if true, clicking on the color badge won't generate a random color",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noRandomColorOnClickChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeWidth",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeHeight",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 71,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeContext",
          "type": "CanvasRenderingContext2D | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 75,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "CanvasRenderingContext2D"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "render",
          "description": "render the element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "resize",
          "description": "resize the element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "randomColor",
          "description": "generates a random color",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_draw",
          "description": "fills a canvas context with a color",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "CanvasRenderingContext2D",
              "description": "The context of the canvas that should be drawn."
            },
            {
              "name": "colorString",
              "type": "String",
              "description": "The color string to be drawn."
            },
            {
              "name": "width",
              "type": "Number",
              "description": "The width to draw within the canvas."
            },
            {
              "name": "height",
              "type": "Number",
              "description": "The height to draw within the canvas"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeContext",
          "description": "computes the canvas contexts of the badge element",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeSizeProperties",
          "description": "computes the size properties for the badge canvas",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_noRandomColorOnClickChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noRandomColorOnClick"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_addClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_removeClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/badge.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 226,
          "column": 7
        },
        "end": {
          "line": 263,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ColorBadge",
      "attributes": [
        {
          "name": "hide-transparency-pattern",
          "description": "hide the transparency pattern",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "no-random-color-on-click",
          "description": "if true, clicking on the color badge won't generate a random color",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "color-badge",
      "mixins": [
        "ColorBadgePattern",
        "ColorMixin",
        "FormElementMixin"
      ]
    },
    {
      "description": "`<color-text-input>` adds a color input to your page using Polymer.\nClick on the badge to generate a random color.\n\n  ```html\n    <color-text-input value=\"{{color}}\"></color-text-input>\n  ```\n\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--transparency-pattern` | background pattern for the transparency layer | linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)), linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)))\n`--transparency-pattern-size` | size transparency pattern | 0.75em\n`--color-badge-radius` | border-radius of the badge | 0.15em\n`--color-badge-shadow` | box-shadow of the badge | none\n`--color-badge-height` | height of the badge | 100%\n`--color-badge-width` | width of the badge | 1.5em\n\nHave a look at [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "color-text-input.js",
      "properties": [
        {
          "name": "hideTransparencyPattern",
          "type": "boolean | null | undefined",
          "description": "hide the transparency pattern",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "noRandomColorOnClick",
          "type": "boolean | null | undefined",
          "description": "if true, clicking on the color badge won't generate a random color",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noRandomColorOnClickChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeWidth",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeHeight",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 71,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeContext",
          "type": "CanvasRenderingContext2D | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 75,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "CanvasRenderingContext2D"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"colorString\"",
          "inheritedFrom": "ColorFormMixin"
        }
      ],
      "methods": [
        {
          "name": "_computeFormatPattern",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "fixedFormat"
            },
            {
              "name": "alphaMode"
            }
          ],
          "inheritedFrom": "ColorTextInputPattern"
        },
        {
          "name": "_computeFormatPlaceholder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "alphaMode"
            },
            {
              "name": "hexAlphaSupported"
            }
          ],
          "inheritedFrom": "ColorTextInputPattern"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "render",
          "description": "render the element",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "resize",
          "description": "resize the element",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "randomColor",
          "description": "generates a random color",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_draw",
          "description": "fills a canvas context with a color",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "CanvasRenderingContext2D",
              "description": "The context of the canvas that should be drawn."
            },
            {
              "name": "colorString",
              "type": "String",
              "description": "The color string to be drawn."
            },
            {
              "name": "width",
              "type": "Number",
              "description": "The width to draw within the canvas."
            },
            {
              "name": "height",
              "type": "Number",
              "description": "The height to draw within the canvas"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeContext",
          "description": "computes the canvas contexts of the badge element",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeSizeProperties",
          "description": "computes the size properties for the badge canvas",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 154,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_noRandomColorOnClickChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noRandomColorOnClick"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_addClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_removeClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 185,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeIsSetFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyForValue"
            },
            {
              "name": "format"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorFormMixin"
        },
        {
          "name": "reset",
          "description": "reset the color properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorFormMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/input.html",
          "description": ""
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 200,
          "column": 7
        },
        "end": {
          "line": 216,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ColorTextInput",
      "attributes": [
        {
          "name": "hide-transparency-pattern",
          "description": "hide the transparency pattern",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "no-random-color-on-click",
          "description": "if true, clicking on the color badge won't generate a random color",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "property-for-value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorFormMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "color-text-input",
      "mixins": [
        "ColorTextInputPattern",
        "ColorBadgePattern",
        "ColorFormMixin",
        "ColorMixin",
        "FormElementMixin"
      ]
    },
    {
      "description": "`<color-input>` adds a color input to your page using Polymer. Depending on the `format` several inputs will be shown for the according color-properties.\nClick on the badge to generate a random color.\n\n  ```html\n    <color-input value=\"{{color}}\"></color-input>\n  ```\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--transparency-pattern` | background pattern for the transparency layer | linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)), linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)))\n`--transparency-pattern-size` | size transparency pattern | 0.75em\n`--color-badge-radius` | border-radius of the badge | 0.15em\n`--color-badge-shadow` | box-shadow of the badge | none\n`--color-badge-height` | height of the badge | 100%\n`--color-badge-width` | width of the badge | 1.5em\n\nHave a look at [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "color-input.js",
      "properties": [
        {
          "name": "_hslStep",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_hslPercentStep",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "hideTransparencyPattern",
          "type": "boolean | null | undefined",
          "description": "hide the transparency pattern",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "noRandomColorOnClick",
          "type": "boolean | null | undefined",
          "description": "if true, clicking on the color badge won't generate a random color",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noRandomColorOnClickChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeWidth",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeHeight",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 71,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeContext",
          "type": "CanvasRenderingContext2D | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 75,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "CanvasRenderingContext2D"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "color-text-input.js",
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"colorString\"",
          "inheritedFrom": "ColorFormMixin"
        }
      ],
      "methods": [
        {
          "name": "_equals",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_equalsNot",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            },
            {
              "name": "c"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_computeHexPatternString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_validateHex"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_computeHslStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hslPrecision"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_computeHslPercentStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hslPrecision"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_computeFormatPattern",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-text-input.js",
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "fixedFormat"
            },
            {
              "name": "alphaMode"
            }
          ],
          "inheritedFrom": "ColorTextInputPattern"
        },
        {
          "name": "_computeFormatPlaceholder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-text-input.js",
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "alphaMode"
            },
            {
              "name": "hexAlphaSupported"
            }
          ],
          "inheritedFrom": "ColorTextInputPattern"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "render",
          "description": "render the element",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "resize",
          "description": "resize the element",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "randomColor",
          "description": "generates a random color",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_draw",
          "description": "fills a canvas context with a color",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "CanvasRenderingContext2D",
              "description": "The context of the canvas that should be drawn."
            },
            {
              "name": "colorString",
              "type": "String",
              "description": "The color string to be drawn."
            },
            {
              "name": "width",
              "type": "Number",
              "description": "The width to draw within the canvas."
            },
            {
              "name": "height",
              "type": "Number",
              "description": "The height to draw within the canvas"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeContext",
          "description": "computes the canvas contexts of the badge element",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeSizeProperties",
          "description": "computes the size properties for the badge canvas",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 154,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_noRandomColorOnClickChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noRandomColorOnClick"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_addClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_removeClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 185,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeIsSetFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-text-input.js",
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyForValue"
            },
            {
              "name": "format"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorFormMixin"
        },
        {
          "name": "reset",
          "description": "reset the color properties",
          "privacy": "public",
          "sourceRange": {
            "file": "color-text-input.js",
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorFormMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/input.html",
          "description": ""
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 129,
          "column": 7
        },
        "end": {
          "line": 145,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ColorInput",
      "attributes": [
        {
          "name": "hide-transparency-pattern",
          "description": "hide the transparency pattern",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "no-random-color-on-click",
          "description": "if true, clicking on the color badge won't generate a random color",
          "sourceRange": {
            "file": "color-badge.js",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "property-for-value",
          "description": "",
          "sourceRange": {
            "file": "color-text-input.js",
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorFormMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "color-input",
      "mixins": [
        "ColorInputPattern",
        "ColorTextInputPattern",
        "ColorBadgePattern",
        "ColorFormMixin",
        "ColorMixin",
        "FormElementMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "Mixin for color-badge",
      "summary": "",
      "path": "color-badge.js",
      "properties": [
        {
          "name": "hideTransparencyPattern",
          "type": "boolean | null | undefined",
          "description": "hide the transparency pattern",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noRandomColorOnClick",
          "type": "boolean | null | undefined",
          "description": "if true, clicking on the color badge won't generate a random color",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noRandomColorOnClickChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_badgeWidth",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 67,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_badgeHeight",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 71,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_badgeContext",
          "type": "CanvasRenderingContext2D | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 75,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "CanvasRenderingContext2D"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "render the element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resize",
          "description": "resize the element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "randomColor",
          "description": "generates a random color",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_draw",
          "description": "fills a canvas context with a color",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "CanvasRenderingContext2D",
              "description": "The context of the canvas that should be drawn."
            },
            {
              "name": "colorString",
              "type": "String",
              "description": "The color string to be drawn."
            },
            {
              "name": "width",
              "type": "Number",
              "description": "The width to draw within the canvas."
            },
            {
              "name": "height",
              "type": "Number",
              "description": "The height to draw within the canvas"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeBadgeContext",
          "description": "computes the canvas contexts of the badge element",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeBadgeSizeProperties",
          "description": "computes the size properties for the badge canvas",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_noRandomColorOnClickChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noRandomColorOnClick"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 7
        },
        "end": {
          "line": 193,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ColorBadgePattern",
      "attributes": [
        {
          "name": "hide-transparency-pattern",
          "description": "hide the transparency pattern",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-random-color-on-click",
          "description": "if true, clicking on the color badge won't generate a random color",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for extending an element to be working with FormElementMixin",
      "summary": "",
      "path": "color-text-input.js",
      "properties": [
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"colorString\""
        }
      ],
      "methods": [
        {
          "name": "_computeIsSetFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyForValue"
            },
            {
              "name": "format"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reset",
          "description": "reset the color properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 7
        },
        "end": {
          "line": 80,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ColorFormMixin",
      "attributes": [
        {
          "name": "property-for-value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for color-text-input",
      "summary": "",
      "path": "color-text-input.js",
      "properties": [],
      "methods": [
        {
          "name": "_computeFormatPattern",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "fixedFormat"
            },
            {
              "name": "alphaMode"
            }
          ]
        },
        {
          "name": "_computeFormatPlaceholder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "alphaMode"
            },
            {
              "name": "hexAlphaSupported"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 88,
          "column": 7
        },
        "end": {
          "line": 164,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ColorTextInputPattern",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for color-input",
      "summary": "",
      "path": "color-input.js",
      "properties": [
        {
          "name": "_hslStep",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_hslPercentStep",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_equals",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ]
        },
        {
          "name": "_equalsNot",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            },
            {
              "name": "c"
            }
          ]
        },
        {
          "name": "_computeHexPatternString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_validateHex"
            }
          ]
        },
        {
          "name": "_computeHslStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hslPrecision"
            }
          ]
        },
        {
          "name": "_computeHslPercentStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hslPrecision"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 7
        },
        "end": {
          "line": 93,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ColorInputPattern",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
