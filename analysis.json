{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<color-badge>` is a badge that displays a color as a rectangle with a specified height and width.\nThe transparency of the color will be displayed. It can slot elements and they are automatically centered. Because of using a canvas to draw the color, it needs to be explicitly sized via the width- and height-attribute.\nClick on the badge to generate a random color.\n\n  ```html\n    <color-badge height=\"24\" width=\"96\" value=\"[[color]]\">\n      <span>[[color]]</span>\n    </color-badge>\n  ```\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--transparency-pattern` | background pattern for the transparency layer | linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)), linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)))\n`--transparency-pattern-size` | size transparency pattern | 0.75em\n`--color-badge-radius` | border-radius of the badge | 6px\n`--color-badge-shadow` | box-shadow of the badge | 0 1px 4px 1px rgba(0,0,0,.1)\n`--color-badge-height` | height of the badge | 32px\n`--color-badge-width` | width of the badge | 60px\n`--color-badge-text-overflow` | text-overflow of the slotted content of the badge | ellipsis\n`--color-badge-padding` | padding of the slotted content of the badge | 4px",
      "summary": "",
      "path": "color-badge.html",
      "properties": [
        {
          "name": "hideTransparencyPattern",
          "type": "boolean | null | undefined",
          "description": "hide the transparency pattern",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "noRandomColorOnClick",
          "type": "boolean | null | undefined",
          "description": "if true, clicking on the color badge won't generate a random color",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 10
            },
            "end": {
              "line": 64,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noRandomColorOnClickChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeWidth",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 68,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeHeight",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeContext",
          "type": "CanvasRenderingContext2D | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "CanvasRenderingContext2D"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "hex",
          "type": "string | null | undefined",
          "description": "Hex-color",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 47,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hexChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "r",
          "type": "number | null | undefined",
          "description": "Red",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "g",
          "type": "number | null | undefined",
          "description": "Green",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "b",
          "type": "number | null | undefined",
          "description": "Blue",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "h",
          "type": "number | null | undefined",
          "description": "Hue",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 83,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "s",
          "type": "number | null | undefined",
          "description": "Saturation (hsl)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 88,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "l",
          "type": "number | null | undefined",
          "description": "Lightness",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 96,
              "column": 10
            },
            "end": {
              "line": 99,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alpha",
          "type": "number | null | undefined",
          "description": "Alpha",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 104,
              "column": 10
            },
            "end": {
              "line": 109,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_alphaChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alphaMode",
          "type": "boolean | null | undefined",
          "description": "if true, colorString has alpha",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_alphaModeChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hslPrecision",
          "type": "number | null | undefined",
          "description": "Precision of hsl-colorStrings, if the format is 'hsl' (for saturation and lightness it is applied according to their percentage colorString)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "format",
          "type": "string | null | undefined",
          "description": "format of the colorString (possible colorStrings: 'rgb', 'hex', 'hsl', 'auto')",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_formatChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "fixedFormat",
          "type": "boolean | null | undefined",
          "description": "format is locked and does not switch according to the colorString",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 142,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hexAlphaSupported",
          "type": "boolean | null | undefined",
          "description": "if true, hex alpha is supported by the browser",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 147,
              "column": 10
            },
            "end": {
              "line": 150,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "colorString",
          "type": "string | null | undefined",
          "description": "value as color-string",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 155,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_colorStringChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 45,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 87,
              "column": 10
            },
            "end": {
              "line": 92,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 97,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is set",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 107,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "type": "Function | null | undefined",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "type": "Function | null | undefined",
          "description": "validates the value (when required)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 123,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "render",
          "description": "render the element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "resize",
          "description": "resize the element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "randomColor",
          "description": "generate random color",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_draw",
          "description": "fills a canvas context with a color",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "CanvasRenderingContext2D",
              "description": "The context of the canvas that should be drawn."
            },
            {
              "name": "colorString",
              "type": "String",
              "description": "The color string to be drawn."
            },
            {
              "name": "width",
              "type": "Number",
              "description": "The width to draw within the canvas."
            },
            {
              "name": "height",
              "type": "Number",
              "description": "The height to draw within the canvas"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeContext",
          "description": "computes the canvas contexts of the badge element",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeSizeProperties",
          "description": "computes the size properties for the badge canvas",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_noRandomColorOnClickChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noRandomColorOnClick"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_addClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_removeClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "resetColor",
          "description": "reset all color properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_createTestCanvas",
          "description": "creates a canvas for testing a color string and browser capabilities",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 216,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_testColor",
          "description": "test a color string in local browser environment",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "colorString"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_colorStringChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "colorString"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_computeColorString",
          "description": "compute color string",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 342,
              "column": 6
            },
            "end": {
              "line": 416,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb",
              "type": "rgbObject",
              "description": "The rgb object"
            },
            {
              "name": "hsl",
              "type": "hslObject",
              "description": "The hsl object"
            },
            {
              "name": "hex",
              "type": "String",
              "description": "The hex string"
            },
            {
              "name": "oldColor",
              "type": "String",
              "description": "The old color string before setting"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "The computed color string"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hexChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 418,
              "column": 6
            },
            "end": {
              "line": 438,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_rgbChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 440,
              "column": 6
            },
            "end": {
              "line": 484,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "r"
            },
            {
              "name": "g"
            },
            {
              "name": "b"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hslChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 486,
              "column": 6
            },
            "end": {
              "line": 529,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "h"
            },
            {
              "name": "s"
            },
            {
              "name": "l"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_formatChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 531,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "oldFormat"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_alphaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 571,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alpha"
            },
            {
              "name": "oldAlpha"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_alphaModeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 573,
              "column": 6
            },
            "end": {
              "line": 577,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alphaMode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hexToRgb",
          "description": "convert hex to rgb",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 584,
              "column": 6
            },
            "end": {
              "line": 597,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex",
              "type": "String",
              "description": "The hex string without alpha"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "the rgb object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "rgbToHex",
          "description": "convert hex to rgb",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 604,
              "column": 6
            },
            "end": {
              "line": 609,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "the rgb object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "rgbToHsl",
          "description": "convert rgb to hsl (the values are not rounded)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 617,
              "column": 6
            },
            "end": {
              "line": 653,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb",
              "type": "rgbObject",
              "description": "rgb object"
            },
            {
              "name": "defaultH",
              "type": "Number",
              "description": "hue to set if saturation is 0"
            }
          ],
          "return": {
            "type": "hslObject",
            "desc": "hsl object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hslToRgb",
          "description": "convert hsl to rgb (the values are not rounded)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 660,
              "column": 6
            },
            "end": {
              "line": 671,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hsl",
              "type": "hslObject",
              "description": "hsl object"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "rgb object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_componentToHex",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 673,
              "column": 6
            },
            "end": {
              "line": 680,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "component"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_alphaToHex",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 682,
              "column": 6
            },
            "end": {
              "line": 688,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alpha"
            },
            {
              "name": "length"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hexToAlpha",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 690,
              "column": 6
            },
            "end": {
              "line": 694,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex"
            },
            {
              "name": "length"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hueToComponent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 696,
              "column": 6
            },
            "end": {
              "line": 703,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "t1"
            },
            {
              "name": "t2"
            },
            {
              "name": "h"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_normalizeRgb",
          "description": "normalize rgb values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 710,
              "column": 5
            },
            "end": {
              "line": 715,
              "column": 6
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb",
              "type": "rgbObject",
              "description": "The rgb-object of which the values should be normalized"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "The normalized rgb-object."
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_normalizeHsl",
          "description": "normalize hsl values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 722,
              "column": 5
            },
            "end": {
              "line": 727,
              "column": 6
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hsl"
            }
          ],
          "return": {
            "type": "hslObject",
            "desc": "The normalized hsl-object."
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_randomRgb",
          "description": "generate random rgb-color",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 733,
              "column": 5
            },
            "end": {
              "line": 739,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "rgbObject",
            "desc": "rgb-color object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_randomHsl",
          "description": "generate random hsl-color",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 745,
              "column": 5
            },
            "end": {
              "line": 751,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "hslObject",
            "desc": "hsl-color object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 22,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultIsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultValidate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet",
              "type": "Function",
              "description": "The function that defines if the value is set"
            },
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            },
            {
              "name": "required",
              "type": "Boolean",
              "description": "if true, the value is required"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validate"
            },
            {
              "name": "isSet"
            },
            {
              "name": "value"
            },
            {
              "name": "required"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 218,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 225,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "reset",
          "description": "reset the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 236,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/badge.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 231,
          "column": 4
        },
        "end": {
          "line": 268,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ColorBadge",
      "attributes": [
        {
          "name": "hide-transparency-pattern",
          "description": "hide the transparency pattern",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "no-random-color-on-click",
          "description": "if true, clicking on the color badge won't generate a random color",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 10
            },
            "end": {
              "line": 64,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "hex",
          "description": "Hex-color",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 47,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "r",
          "description": "Red",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "g",
          "description": "Green",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "b",
          "description": "Blue",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "h",
          "description": "Hue",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 83,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "s",
          "description": "Saturation (hsl)",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 88,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "l",
          "description": "Lightness",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 96,
              "column": 10
            },
            "end": {
              "line": 99,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alpha",
          "description": "Alpha",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 104,
              "column": 10
            },
            "end": {
              "line": 109,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alpha-mode",
          "description": "if true, colorString has alpha",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hsl-precision",
          "description": "Precision of hsl-colorStrings, if the format is 'hsl' (for saturation and lightness it is applied according to their percentage colorString)",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "format",
          "description": "format of the colorString (possible colorStrings: 'rgb', 'hex', 'hsl', 'auto')",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "fixed-format",
          "description": "format is locked and does not switch according to the colorString",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 142,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "color-string",
          "description": "value as color-string",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 155,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 45,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 87,
              "column": 10
            },
            "end": {
              "line": 92,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 97,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value-is-set",
          "description": "is true when the value is set",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 107,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "color-badge",
      "mixins": [
        "ColorBadgePattern",
        "ColorMixin",
        "FormElementMixin"
      ]
    },
    {
      "description": "`<color-text-input>` adds a color input to your page using Polymer.\nClick on the badge to generate a random color.\n\n  ```html\n    <color-text-input value=\"{{color}}\"></color-text-input>\n  ```\n\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--transparency-pattern` | background pattern for the transparency layer | linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)), linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)))\n`--transparency-pattern-size` | size transparency pattern | 0.75em\n`--color-badge-radius` | border-radius of the badge | 0.15em\n`--color-badge-shadow` | box-shadow of the badge | none\n`--color-badge-height` | height of the badge | 100%\n`--color-badge-width` | width of the badge | 1.5em\n\nHave a look at [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "color-text-input.html",
      "properties": [
        {
          "name": "hideTransparencyPattern",
          "type": "boolean | null | undefined",
          "description": "hide the transparency pattern",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "noRandomColorOnClick",
          "type": "boolean | null | undefined",
          "description": "if true, clicking on the color badge won't generate a random color",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 60,
              "column": 10
            },
            "end": {
              "line": 64,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noRandomColorOnClickChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeWidth",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 68,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeHeight",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeContext",
          "type": "CanvasRenderingContext2D | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "CanvasRenderingContext2D"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "hex",
          "type": "string | null | undefined",
          "description": "Hex-color",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 47,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hexChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "r",
          "type": "number | null | undefined",
          "description": "Red",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "g",
          "type": "number | null | undefined",
          "description": "Green",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "b",
          "type": "number | null | undefined",
          "description": "Blue",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "h",
          "type": "number | null | undefined",
          "description": "Hue",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 83,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "s",
          "type": "number | null | undefined",
          "description": "Saturation (hsl)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 88,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "l",
          "type": "number | null | undefined",
          "description": "Lightness",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 96,
              "column": 10
            },
            "end": {
              "line": 99,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alpha",
          "type": "number | null | undefined",
          "description": "Alpha",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 104,
              "column": 10
            },
            "end": {
              "line": 109,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_alphaChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alphaMode",
          "type": "boolean | null | undefined",
          "description": "if true, colorString has alpha",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_alphaModeChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hslPrecision",
          "type": "number | null | undefined",
          "description": "Precision of hsl-colorStrings, if the format is 'hsl' (for saturation and lightness it is applied according to their percentage colorString)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "format",
          "type": "string | null | undefined",
          "description": "format of the colorString (possible colorStrings: 'rgb', 'hex', 'hsl', 'auto')",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_formatChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "fixedFormat",
          "type": "boolean | null | undefined",
          "description": "format is locked and does not switch according to the colorString",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 142,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hexAlphaSupported",
          "type": "boolean | null | undefined",
          "description": "if true, hex alpha is supported by the browser",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 147,
              "column": 10
            },
            "end": {
              "line": 150,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "colorString",
          "type": "string | null | undefined",
          "description": "value as color-string",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 155,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_colorStringChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 45,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 87,
              "column": 10
            },
            "end": {
              "line": 92,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 97,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is set",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 107,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "type": "Function | null | undefined",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "type": "Function | null | undefined",
          "description": "validates the value (when required)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 123,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        }
      ],
      "methods": [
        {
          "name": "_computeFormatPattern",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "fixedFormat"
            },
            {
              "name": "alphaMode"
            }
          ],
          "inheritedFrom": "ColorTextInputPattern"
        },
        {
          "name": "_computeFormatPlaceholder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "alphaMode"
            },
            {
              "name": "hexAlphaSupported"
            }
          ],
          "inheritedFrom": "ColorTextInputPattern"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "render",
          "description": "render the element",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 99,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "resize",
          "description": "resize the element",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "randomColor",
          "description": "generate random color",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_draw",
          "description": "fills a canvas context with a color",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "CanvasRenderingContext2D",
              "description": "The context of the canvas that should be drawn."
            },
            {
              "name": "colorString",
              "type": "String",
              "description": "The color string to be drawn."
            },
            {
              "name": "width",
              "type": "Number",
              "description": "The width to draw within the canvas."
            },
            {
              "name": "height",
              "type": "Number",
              "description": "The height to draw within the canvas"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeContext",
          "description": "computes the canvas contexts of the badge element",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeSizeProperties",
          "description": "computes the size properties for the badge canvas",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_noRandomColorOnClickChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noRandomColorOnClick"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_addClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_removeClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeIsSetFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyForValue"
            },
            {
              "name": "format"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorFormMixin"
        },
        {
          "name": "reset",
          "description": "reset the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 236,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "resetColor",
          "description": "reset all color properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_createTestCanvas",
          "description": "creates a canvas for testing a color string and browser capabilities",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 216,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_testColor",
          "description": "test a color string in local browser environment",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "colorString"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_colorStringChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "colorString"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_computeColorString",
          "description": "compute color string",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 342,
              "column": 6
            },
            "end": {
              "line": 416,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb",
              "type": "rgbObject",
              "description": "The rgb object"
            },
            {
              "name": "hsl",
              "type": "hslObject",
              "description": "The hsl object"
            },
            {
              "name": "hex",
              "type": "String",
              "description": "The hex string"
            },
            {
              "name": "oldColor",
              "type": "String",
              "description": "The old color string before setting"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "The computed color string"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hexChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 418,
              "column": 6
            },
            "end": {
              "line": 438,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_rgbChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 440,
              "column": 6
            },
            "end": {
              "line": 484,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "r"
            },
            {
              "name": "g"
            },
            {
              "name": "b"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hslChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 486,
              "column": 6
            },
            "end": {
              "line": 529,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "h"
            },
            {
              "name": "s"
            },
            {
              "name": "l"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_formatChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 531,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "oldFormat"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_alphaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 571,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alpha"
            },
            {
              "name": "oldAlpha"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_alphaModeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 573,
              "column": 6
            },
            "end": {
              "line": 577,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alphaMode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hexToRgb",
          "description": "convert hex to rgb",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 584,
              "column": 6
            },
            "end": {
              "line": 597,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex",
              "type": "String",
              "description": "The hex string without alpha"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "the rgb object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "rgbToHex",
          "description": "convert hex to rgb",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 604,
              "column": 6
            },
            "end": {
              "line": 609,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "the rgb object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "rgbToHsl",
          "description": "convert rgb to hsl (the values are not rounded)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 617,
              "column": 6
            },
            "end": {
              "line": 653,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb",
              "type": "rgbObject",
              "description": "rgb object"
            },
            {
              "name": "defaultH",
              "type": "Number",
              "description": "hue to set if saturation is 0"
            }
          ],
          "return": {
            "type": "hslObject",
            "desc": "hsl object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hslToRgb",
          "description": "convert hsl to rgb (the values are not rounded)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 660,
              "column": 6
            },
            "end": {
              "line": 671,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hsl",
              "type": "hslObject",
              "description": "hsl object"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "rgb object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_componentToHex",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 673,
              "column": 6
            },
            "end": {
              "line": 680,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "component"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_alphaToHex",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 682,
              "column": 6
            },
            "end": {
              "line": 688,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alpha"
            },
            {
              "name": "length"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hexToAlpha",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 690,
              "column": 6
            },
            "end": {
              "line": 694,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex"
            },
            {
              "name": "length"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hueToComponent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 696,
              "column": 6
            },
            "end": {
              "line": 703,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "t1"
            },
            {
              "name": "t2"
            },
            {
              "name": "h"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_normalizeRgb",
          "description": "normalize rgb values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 710,
              "column": 5
            },
            "end": {
              "line": 715,
              "column": 6
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb",
              "type": "rgbObject",
              "description": "The rgb-object of which the values should be normalized"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "The normalized rgb-object."
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_normalizeHsl",
          "description": "normalize hsl values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 722,
              "column": 5
            },
            "end": {
              "line": 727,
              "column": 6
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hsl"
            }
          ],
          "return": {
            "type": "hslObject",
            "desc": "The normalized hsl-object."
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_randomRgb",
          "description": "generate random rgb-color",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 733,
              "column": 5
            },
            "end": {
              "line": 739,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "rgbObject",
            "desc": "rgb-color object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_randomHsl",
          "description": "generate random hsl-color",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 745,
              "column": 5
            },
            "end": {
              "line": 751,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "hslObject",
            "desc": "hsl-color object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 22,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultIsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultValidate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet",
              "type": "Function",
              "description": "The function that defines if the value is set"
            },
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            },
            {
              "name": "required",
              "type": "Boolean",
              "description": "if true, the value is required"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validate"
            },
            {
              "name": "isSet"
            },
            {
              "name": "value"
            },
            {
              "name": "required"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 218,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 225,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/input.html",
          "description": ""
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 203,
          "column": 4
        },
        "end": {
          "line": 219,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ColorTextInput",
      "attributes": [
        {
          "name": "hide-transparency-pattern",
          "description": "hide the transparency pattern",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "no-random-color-on-click",
          "description": "if true, clicking on the color badge won't generate a random color",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 60,
              "column": 10
            },
            "end": {
              "line": 64,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "hex",
          "description": "Hex-color",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 47,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "r",
          "description": "Red",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "g",
          "description": "Green",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "b",
          "description": "Blue",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "h",
          "description": "Hue",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 83,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "s",
          "description": "Saturation (hsl)",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 88,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "l",
          "description": "Lightness",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 96,
              "column": 10
            },
            "end": {
              "line": 99,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alpha",
          "description": "Alpha",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 104,
              "column": 10
            },
            "end": {
              "line": 109,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alpha-mode",
          "description": "if true, colorString has alpha",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hsl-precision",
          "description": "Precision of hsl-colorStrings, if the format is 'hsl' (for saturation and lightness it is applied according to their percentage colorString)",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "format",
          "description": "format of the colorString (possible colorStrings: 'rgb', 'hex', 'hsl', 'auto')",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "fixed-format",
          "description": "format is locked and does not switch according to the colorString",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 142,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "color-string",
          "description": "value as color-string",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 155,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 45,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 87,
              "column": 10
            },
            "end": {
              "line": 92,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 97,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value-is-set",
          "description": "is true when the value is set",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 107,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "color-text-input",
      "mixins": [
        "ColorTextInputPattern",
        "ColorBadgePattern",
        "ColorFormMixin",
        "ColorMixin",
        "FormElementMixin"
      ]
    },
    {
      "description": "`<color-input>` adds a color input to your page using Polymer. Depending on the `format` several inputs will be shown for the according color-properties.\nClick on the badge to generate a random color.\n\n  ```html\n    <color-input value=\"{{color}}\"></color-input>\n  ```\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--transparency-pattern` | background pattern for the transparency layer | linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)), linear-gradient(45deg, rgba(0,0,0,0.1) 25%, transparent 25%, transparent 75%, rgba(0,0,0,0.1) 75%, rgba(0,0,0,0.1)))\n`--transparency-pattern-size` | size transparency pattern | 0.75em\n`--color-badge-radius` | border-radius of the badge | 0.15em\n`--color-badge-shadow` | box-shadow of the badge | none\n`--color-badge-height` | height of the badge | 100%\n`--color-badge-width` | width of the badge | 1.5em\n\nHave a look at [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see how to style the element.",
      "summary": "",
      "path": "color-input.html",
      "properties": [
        {
          "name": "_hslStep",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_hslPercentStep",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "hideTransparencyPattern",
          "type": "boolean | null | undefined",
          "description": "hide the transparency pattern",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "noRandomColorOnClick",
          "type": "boolean | null | undefined",
          "description": "if true, clicking on the color badge won't generate a random color",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 60,
              "column": 10
            },
            "end": {
              "line": 64,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noRandomColorOnClickChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeWidth",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 68,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeHeight",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_badgeContext",
          "type": "CanvasRenderingContext2D | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "CanvasRenderingContext2D"
            }
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "hex",
          "type": "string | null | undefined",
          "description": "Hex-color",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 47,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hexChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "r",
          "type": "number | null | undefined",
          "description": "Red",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "g",
          "type": "number | null | undefined",
          "description": "Green",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "b",
          "type": "number | null | undefined",
          "description": "Blue",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "h",
          "type": "number | null | undefined",
          "description": "Hue",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 83,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "s",
          "type": "number | null | undefined",
          "description": "Saturation (hsl)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 88,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "l",
          "type": "number | null | undefined",
          "description": "Lightness",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 96,
              "column": 10
            },
            "end": {
              "line": 99,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alpha",
          "type": "number | null | undefined",
          "description": "Alpha",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 104,
              "column": 10
            },
            "end": {
              "line": 109,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_alphaChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alphaMode",
          "type": "boolean | null | undefined",
          "description": "if true, colorString has alpha",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_alphaModeChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hslPrecision",
          "type": "number | null | undefined",
          "description": "Precision of hsl-colorStrings, if the format is 'hsl' (for saturation and lightness it is applied according to their percentage colorString)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "format",
          "type": "string | null | undefined",
          "description": "format of the colorString (possible colorStrings: 'rgb', 'hex', 'hsl', 'auto')",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_formatChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"auto\"",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "fixedFormat",
          "type": "boolean | null | undefined",
          "description": "format is locked and does not switch according to the colorString",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 142,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hexAlphaSupported",
          "type": "boolean | null | undefined",
          "description": "if true, hex alpha is supported by the browser",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 147,
              "column": 10
            },
            "end": {
              "line": 150,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "colorString",
          "type": "string | null | undefined",
          "description": "value as color-string",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 155,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_colorStringChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 45,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "default value of the value, when it does not validate",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 87,
              "column": 10
            },
            "end": {
              "line": 92,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 97,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is set",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 107,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "type": "Function | null | undefined",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 116,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "type": "Function | null | undefined",
          "description": "validates the value (when required)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 123,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        }
      ],
      "methods": [
        {
          "name": "_equals",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_equalsNot",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            },
            {
              "name": "c"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_computeHexPatternString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_validateHex"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_computeHslStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hslPrecision"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_computeHslPercentStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hslPrecision"
            }
          ],
          "inheritedFrom": "ColorInputPattern"
        },
        {
          "name": "_computeFormatPattern",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-text-input.html",
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "fixedFormat"
            },
            {
              "name": "alphaMode"
            }
          ],
          "inheritedFrom": "ColorTextInputPattern"
        },
        {
          "name": "_computeFormatPlaceholder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-text-input.html",
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "alphaMode"
            },
            {
              "name": "hexAlphaSupported"
            }
          ],
          "inheritedFrom": "ColorTextInputPattern"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "render",
          "description": "render the element",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 99,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "resize",
          "description": "resize the element",
          "privacy": "public",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "randomColor",
          "description": "generate random color",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_draw",
          "description": "fills a canvas context with a color",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "CanvasRenderingContext2D",
              "description": "The context of the canvas that should be drawn."
            },
            {
              "name": "colorString",
              "type": "String",
              "description": "The color string to be drawn."
            },
            {
              "name": "width",
              "type": "Number",
              "description": "The width to draw within the canvas."
            },
            {
              "name": "height",
              "type": "Number",
              "description": "The height to draw within the canvas"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeContext",
          "description": "computes the canvas contexts of the badge element",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeBadgeSizeProperties",
          "description": "computes the size properties for the badge canvas",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_noRandomColorOnClickChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noRandomColorOnClick"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_addClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_removeClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "_computeIsSetFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "color-text-input.html",
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyForValue"
            },
            {
              "name": "format"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorFormMixin"
        },
        {
          "name": "reset",
          "description": "reset the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 236,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "resetColor",
          "description": "reset all color properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_createTestCanvas",
          "description": "creates a canvas for testing a color string and browser capabilities",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 216,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_testColor",
          "description": "test a color string in local browser environment",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "colorString"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_colorStringChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "colorString"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_computeColorString",
          "description": "compute color string",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 342,
              "column": 6
            },
            "end": {
              "line": 416,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb",
              "type": "rgbObject",
              "description": "The rgb object"
            },
            {
              "name": "hsl",
              "type": "hslObject",
              "description": "The hsl object"
            },
            {
              "name": "hex",
              "type": "String",
              "description": "The hex string"
            },
            {
              "name": "oldColor",
              "type": "String",
              "description": "The old color string before setting"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "The computed color string"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hexChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 418,
              "column": 6
            },
            "end": {
              "line": 438,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_rgbChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 440,
              "column": 6
            },
            "end": {
              "line": 484,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "r"
            },
            {
              "name": "g"
            },
            {
              "name": "b"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hslChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 486,
              "column": 6
            },
            "end": {
              "line": 529,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "h"
            },
            {
              "name": "s"
            },
            {
              "name": "l"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_formatChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 531,
              "column": 6
            },
            "end": {
              "line": 547,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "oldFormat"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_alphaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 549,
              "column": 6
            },
            "end": {
              "line": 571,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alpha"
            },
            {
              "name": "oldAlpha"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_alphaModeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 573,
              "column": 6
            },
            "end": {
              "line": 577,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alphaMode"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hexToRgb",
          "description": "convert hex to rgb",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 584,
              "column": 6
            },
            "end": {
              "line": 597,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex",
              "type": "String",
              "description": "The hex string without alpha"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "the rgb object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "rgbToHex",
          "description": "convert hex to rgb",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 604,
              "column": 6
            },
            "end": {
              "line": 609,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "the rgb object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "rgbToHsl",
          "description": "convert rgb to hsl (the values are not rounded)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 617,
              "column": 6
            },
            "end": {
              "line": 653,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb",
              "type": "rgbObject",
              "description": "rgb object"
            },
            {
              "name": "defaultH",
              "type": "Number",
              "description": "hue to set if saturation is 0"
            }
          ],
          "return": {
            "type": "hslObject",
            "desc": "hsl object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hslToRgb",
          "description": "convert hsl to rgb (the values are not rounded)",
          "privacy": "public",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 660,
              "column": 6
            },
            "end": {
              "line": 671,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hsl",
              "type": "hslObject",
              "description": "hsl object"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "rgb object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_componentToHex",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 673,
              "column": 6
            },
            "end": {
              "line": 680,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "component"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_alphaToHex",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 682,
              "column": 6
            },
            "end": {
              "line": 688,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "alpha"
            },
            {
              "name": "length"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hexToAlpha",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 690,
              "column": 6
            },
            "end": {
              "line": 694,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex"
            },
            {
              "name": "length"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_hueToComponent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 696,
              "column": 6
            },
            "end": {
              "line": 703,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "t1"
            },
            {
              "name": "t2"
            },
            {
              "name": "h"
            }
          ],
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_normalizeRgb",
          "description": "normalize rgb values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 710,
              "column": 5
            },
            "end": {
              "line": 715,
              "column": 6
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rgb",
              "type": "rgbObject",
              "description": "The rgb-object of which the values should be normalized"
            }
          ],
          "return": {
            "type": "rgbObject",
            "desc": "The normalized rgb-object."
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_normalizeHsl",
          "description": "normalize hsl values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 722,
              "column": 5
            },
            "end": {
              "line": 727,
              "column": 6
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hsl"
            }
          ],
          "return": {
            "type": "hslObject",
            "desc": "The normalized hsl-object."
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_randomRgb",
          "description": "generate random rgb-color",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 733,
              "column": 5
            },
            "end": {
              "line": 739,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "rgbObject",
            "desc": "rgb-color object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_randomHsl",
          "description": "generate random hsl-color",
          "privacy": "protected",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 745,
              "column": 5
            },
            "end": {
              "line": 751,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "hslObject",
            "desc": "hsl-color object"
          },
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 22,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultIsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultValidate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet",
              "type": "Function",
              "description": "The function that defines if the value is set"
            },
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            },
            {
              "name": "required",
              "type": "Boolean",
              "description": "if true, the value is required"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validate"
            },
            {
              "name": "isSet"
            },
            {
              "name": "value"
            },
            {
              "name": "required"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 218,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 225,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/input.html",
          "description": ""
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 150,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ColorInput",
      "attributes": [
        {
          "name": "hide-transparency-pattern",
          "description": "hide the transparency pattern",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "no-random-color-on-click",
          "description": "if true, clicking on the color badge won't generate a random color",
          "sourceRange": {
            "file": "color-badge.html",
            "start": {
              "line": 60,
              "column": 10
            },
            "end": {
              "line": 64,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorBadgePattern"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 53,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "hex",
          "description": "Hex-color",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 47,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "r",
          "description": "Red",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "g",
          "description": "Green",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "b",
          "description": "Blue",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 72,
              "column": 10
            },
            "end": {
              "line": 75,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "h",
          "description": "Hue",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 80,
              "column": 10
            },
            "end": {
              "line": 83,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "s",
          "description": "Saturation (hsl)",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 88,
              "column": 10
            },
            "end": {
              "line": 91,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "l",
          "description": "Lightness",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 96,
              "column": 10
            },
            "end": {
              "line": 99,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alpha",
          "description": "Alpha",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 104,
              "column": 10
            },
            "end": {
              "line": 109,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "alpha-mode",
          "description": "if true, colorString has alpha",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 114,
              "column": 10
            },
            "end": {
              "line": 118,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "hsl-precision",
          "description": "Precision of hsl-colorStrings, if the format is 'hsl' (for saturation and lightness it is applied according to their percentage colorString)",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 122,
              "column": 10
            },
            "end": {
              "line": 125,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "format",
          "description": "format of the colorString (possible colorStrings: 'rgb', 'hex', 'hsl', 'auto')",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 130,
              "column": 10
            },
            "end": {
              "line": 135,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "fixed-format",
          "description": "format is locked and does not switch according to the colorString",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 140,
              "column": 10
            },
            "end": {
              "line": 142,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "color-string",
          "description": "value as color-string",
          "sourceRange": {
            "file": "../property-mixins/color-mixin.html",
            "start": {
              "line": 155,
              "column": 10
            },
            "end": {
              "line": 159,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "ColorMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 38,
              "column": 10
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 45,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 61,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default value of the value, when it does not validate",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 87,
              "column": 10
            },
            "end": {
              "line": 92,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 97,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value-is-set",
          "description": "is true when the value is set",
          "sourceRange": {
            "file": "../input-picker-pattern/form-element-mixin.html",
            "start": {
              "line": 107,
              "column": 10
            },
            "end": {
              "line": 111,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "color-input",
      "mixins": [
        "ColorInputPattern",
        "ColorTextInputPattern",
        "ColorBadgePattern",
        "ColorFormMixin",
        "ColorMixin",
        "FormElementMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "Mixin for color-badge",
      "summary": "",
      "path": "color-badge.html",
      "properties": [
        {
          "name": "hideTransparencyPattern",
          "type": "boolean | null | undefined",
          "description": "hide the transparency pattern",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noRandomColorOnClick",
          "type": "boolean | null | undefined",
          "description": "if true, clicking on the color badge won't generate a random color",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 10
            },
            "end": {
              "line": 64,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noRandomColorOnClickChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_badgeWidth",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 10
            },
            "end": {
              "line": 68,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_badgeHeight",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_badgeContext",
          "type": "CanvasRenderingContext2D | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 10
            },
            "end": {
              "line": 76,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "CanvasRenderingContext2D"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "render the element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resize",
          "description": "resize the element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "randomColor",
          "description": "generates a random color",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_draw",
          "description": "fills a canvas context with a color",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "context",
              "type": "CanvasRenderingContext2D",
              "description": "The context of the canvas that should be drawn."
            },
            {
              "name": "colorString",
              "type": "String",
              "description": "The color string to be drawn."
            },
            {
              "name": "width",
              "type": "Number",
              "description": "The width to draw within the canvas."
            },
            {
              "name": "height",
              "type": "Number",
              "description": "The height to draw within the canvas"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeBadgeContext",
          "description": "computes the canvas contexts of the badge element",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeBadgeSizeProperties",
          "description": "computes the size properties for the badge canvas",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_noRandomColorOnClickChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noRandomColorOnClick"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeClickListenerForBadge",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 194,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ColorBadgePattern",
      "attributes": [
        {
          "name": "hide-transparency-pattern",
          "description": "hide the transparency pattern",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-random-color-on-click",
          "description": "if true, clicking on the color badge won't generate a random color",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 10
            },
            "end": {
              "line": 64,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for extending an element to be working with FormElementMixin",
      "summary": "",
      "path": "color-text-input.html",
      "properties": [
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"colorString\""
        }
      ],
      "methods": [
        {
          "name": "_computeIsSetFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyForValue"
            },
            {
              "name": "format"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reset",
          "description": "reset the color properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 81,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ColorFormMixin",
      "attributes": [
        {
          "name": "property-for-value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 10
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for color-text-input",
      "summary": "",
      "path": "color-text-input.html",
      "properties": [],
      "methods": [
        {
          "name": "_computeFormatPattern",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "fixedFormat"
            },
            {
              "name": "alphaMode"
            }
          ]
        },
        {
          "name": "_computeFormatPlaceholder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "format"
            },
            {
              "name": "alphaMode"
            },
            {
              "name": "hexAlphaSupported"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 90,
          "column": 2
        },
        "end": {
          "line": 163,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ColorTextInputPattern",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin for color-input",
      "summary": "",
      "path": "color-input.html",
      "properties": [
        {
          "name": "_hslStep",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_hslPercentStep",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 70,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_equals",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ]
        },
        {
          "name": "_equalsNot",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            },
            {
              "name": "c"
            }
          ]
        },
        {
          "name": "_computeHexPatternString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_validateHex"
            }
          ]
        },
        {
          "name": "_computeHslStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hslPrecision"
            }
          ]
        },
        {
          "name": "_computeHslPercentStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hslPrecision"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 94,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "ColorInputPattern",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
